{{- if .Values.controllerManager.create }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "controller-manager.name" . }}-deployment
  namespace: {{ template "nebula-operator.namespace" . }}
  labels:
  {{- include "controller-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
    {{- include "controller-manager.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "controller-manager.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "controller-manager.name" . }}-sa
      {{- include "nebula-operator.imagePullSecrets" . | indent 6 }}
      containers:
        - name: controller-manager
          image: {{ .Values.image.nebulaOperator.image }}
          imagePullPolicy: {{ .Values.image.nebulaOperator.imagePullPolicy }}
          command:
            - /usr/local/bin/controller-manager
          args:
            {{- if .Values.watchNamespaces }}
            - --watch-namespaces={{ .Values.watchNamespaces }}
            {{- end }}
            - --sync-period={{ .Values.syncPeriod }}
            - --concurrent-nebulacluster-syncs={{ .Values.concurrentNebulaClusterSyncs }}
            - --concurrent-nebularestore-syncs={{ .Values.concurrentNebulaRestoreSyncs }}
            - --leader-elect
            - --leader-elect-resource-namespace={{ template "nebula-operator.namespace" . }}
            - --enable-admission-webhook={{ .Values.admissionWebhook.create }}
            - --webhook-secure-port={{ .Values.admissionWebhook.webhookBindPort }}
            - --enable-kruise-scheme={{ .Values.enableKruiseScheme }}
          {{- if or .Values.kubernetesClusterDomain .Values.controllerManager.env }}
          env:
            {{- if .Values.kubernetesClusterDomain }}
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ .Values.kubernetesClusterDomain }}
            {{- end }}
          {{- if .Values.controllerManager.env }}{{ toYaml .Values.controllerManager.env | nindent 12 }}{{- end }}
          {{- end }}
          {{- if .Values.admissionWebhook.create }}
          ports:
            - containerPort: {{ .Values.admissionWebhook.webhookBindPort | default 9443 }}
              name: webhook-server
              protocol: TCP
          {{- end }}
          resources:
          {{- toYaml .Values.controllerManager.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
          {{- if .Values.admissionWebhook.create }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- end }}
        - name: autoscaler
          image: {{ .Values.image.nebulaOperator.image }}
          imagePullPolicy: {{ .Values.image.nebulaOperator.imagePullPolicy }}
          command:
            - /usr/local/bin/autoscaler
          args:
            {{- if .Values.watchNamespaces }}
            - --watch-namespaces={{ .Values.watchNamespaces }}
            {{- end }}
            - --concurrent-autoscaler-syncs={{ .Values.concurrentAutoscalerSyncs }}
            - --health-probe-bind-address=:8091
            - --metrics-bind-address=:8090
            - --leader-elect
            - --leader-elect-resource-namespace={{ template "nebula-operator.namespace" . }}
          {{- if or .Values.kubernetesClusterDomain .Values.controllerManager.env }}
          env:
            {{- if .Values.kubernetesClusterDomain }}
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ .Values.kubernetesClusterDomain }}
            {{- end }}
          {{- if .Values.controllerManager.env }}{{ toYaml .Values.controllerManager.env | nindent 12 }}{{- end }}
          {{- end }}
          resources:
          {{- toYaml .Values.controllerManager.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8091
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8091
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.admissionWebhook.create }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ template "admission-webhook.name" . }}-secret
      {{- end }}
{{- end }}
