apiVersion: apps.nebula-graph.io/v1alpha1
kind: NebulaCluster
metadata:
  name: nebula
spec:
  # Alpine image built with linux tools.
  alpineImage: "reg.vesoft-inc.com/nebula-alpine:latest"
  graphd:
    config:
      prioritize_intra_zone_reading: "true"
      stick_to_intra_zone_on_failure: "true"
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "2"
        memory: "2Gi"
    replicas: 1
    image: reg.vesoft-inc.com/nebula-graphd-ent
    version: v3.6.0
    service:
      type: NodePort
      externalTrafficPolicy: Local
    logVolumeClaim:
      resources:
        requests:
          storage: 1Gi
      storageClassName: ebs-sc
  metad:
    licenseManagerURL: "nebula-license-manager-svc:9119"
    config:
      zone_list: az1,az2,az3
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
    replicas: 1
    image: reg.vesoft-inc.com/nebula-metad-ent
    version: v3.6.0
    dataVolumeClaim:
      resources:
        requests:
          storage: 5Gi
      storageClassName: ebs-sc
    logVolumeClaim:
      resources:
        requests:
          storage: 1Gi
      storageClassName: ebs-sc
  storaged:
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "2"
        memory: "2Gi"
    replicas: 3
    image: reg.vesoft-inc.com/nebula-storaged-ent
    version: v3.6.0
    dataVolumeClaims:
    - resources:
        requests:
          storage: 10Gi
      storageClassName: ebs-sc
    logVolumeClaim:
      resources:
        requests:
          storage: 1Gi
      storageClassName: ebs-sc
  reference:
    name: statefulsets.apps
    version: v1
  schedulerName: nebula-scheduler
  imagePullPolicy: Always
  topologySpreadConstraints:
  - topologyKey: "topology.kubernetes.io/zone"
    whenUnsatisfiable: "DoNotSchedule"
